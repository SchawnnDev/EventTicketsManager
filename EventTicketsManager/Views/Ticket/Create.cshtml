@using Library.Enums
@model TicketCreateModel

@{
    ViewData["Title"] = "Create";
}

@section Styles {
    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
}

<h1>Create</h1>

<h4>Create an new Ticket.</h4>
<hr/>
<form asp-action="Create">

    @if (Model.IsError())
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.Error
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Ticket.FirstName" class="control-label">First Name</label>
                <input asp-for="Ticket.FirstName" name="FirstName" class="form-control"/>
                <span asp-validation-for="Ticket.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ticket.LastName" class="control-label">Last Name</label>
                <input asp-for="Ticket.LastName" name="LastName" class="form-control"/>
                <span asp-validation-for="Ticket.LastName" class="text-danger"></span>
            </div>
        </div>

        <div class="col">
            <div class="form-group">
                <label asp-for="Ticket.Email" type="email" class="control-label"></label>
                <input asp-for="Ticket.Email" name="Email" class="form-control"/>
                <span asp-validation-for="Ticket.Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Gender</label>
                <select name="Gender" class="form-control">
                    @foreach (var gender in Enum.GetValues(typeof(Gender)))
                    {
                        @Html.Raw($"<option value='{(int) gender}' {((int) gender == Model.Ticket.Gender ? "selected" : "")}>{gender}</option>")
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <label asp-for="Ticket.ToPay" class="control-label">To Pay</label>
            <div class="input-group mb-2">
                <input type="number" asp-for="Ticket.ToPay" class="form-control" aria-label="Amount (to the nearest euro)" step="0.5" min="0">
                <div class="input-group-append">
                    <span class="input-group-text">€</span>
                </div>
                <span asp-validation-for="Ticket.ToPay" class="text-danger"></span>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label class="control-label">Has Paid</label>
                <select name="HasPaid" class="form-control">
                    @if (Model.Ticket.HasPaid)
                    {
                        @Html.Raw("<option value='1' selected>Yes</option>")
                        @Html.Raw("<option value='0'>No</option>")
                    }
                    else
                    {
                        @Html.Raw("<option value='0' selected>No</option>")
                        @Html.Raw("<option value='1' >Yes</option>")
                    }
                </select>
            </div>
        </div>
    </div>

    <input type="number" hidden="hidden" name="TicketEventId" value="@Model.Ticket.TicketEventId"/>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary btn-block"/>
            </div>
        </div>
    </div>
</form>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}