@using System.Globalization
@using Library.Enums
@model TicketDetailsModel

@{
    ViewData["Title"] = "Détails d'un billet";
    var scanCount = 1;
    var mailCount = 1;
}

@section Styles {
    <style type="text/css">
        .tableFixHead { /*
		overflow-y: auto;
		height: 350px; */
            position: relative;
            max-height: 350px;
            overflow: auto;
            display: block;
        }
    </style>
}

<h1>Détails</h1>

<div>
    <h4>Gérer un billet.</h4>
    <hr/>
</div>

@if (Model.IsError())
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @Model.Error
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="container">

    <div class="row">

        <div class="col-md-6">

            <h6>Informations</h6>

            <table class="table table-bordered table-striped mb-0">

                <tbody>
                <tr>
                    <td>Prénom</td>
                    <td>@Model.Ticket.FirstName</td>
                </tr>
                <tr>
                    <td>Nom de famille</td>
                    <td>@Model.Ticket.LastName</td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td>@Model.Ticket.Email</td>
                </tr>
                <tr>
                    <td>Moyen de paiement</td>
                    <td>@(((PaymentMethod)Model.Ticket.PaymentMethod).ToString())</td>
                </tr>
                <tr>
                    <td>A payer</td>
                    <td>@(Model.Ticket.ToPay.ToString("C", CultureInfo.CreateSpecificCulture("fr-FR")))</td>
                </tr>
                <tr>
                    <td>Crée par</td>
                    <td>@(Model.CreatorEmail)</td>
                </tr>
                <tr>
                    <td>Billet scanné ?</td>
                    <td>@(Model.TicketScanned ? $"Oui ({Model.TicketScanNumber})" : "Non")</td>
                </tr>
                </tbody>
            </table>


        </div>

        <div class="col-md-6">


            <h6>Informations paiement</h6>

            <div class="alert alert-@(Model.Ticket.HasPaid ? "success" : "danger")" role="alert">
                @Html.Raw($"Ce ticket {(Model.Ticket.HasPaid ? "est" : "doit être")} payé!")
            </div>

            <div class="row">

                <div class="col-md-6">

                    <h6>Qr Code</h6>

                    <div id="qrcode"></div>

                    @if (Model.HasQrCode())
                    {
                        <button id="qrcodebtn" class="btn btn-primary" onclick="displayQrCode('@Model.GetQrCodeContent()')">Afficher le code QR</button>
                    }
                    else
                    {
                        <form asp-action="GenerateKey">
                            <input type="number" name="TicketId" hidden="hidden" value="@Model.Ticket.Id"/>
                            <button id="qrcodebtn" class="btn btn-primary" type="submit" onclick="generateQrCode()">Générer le code QR</button>
                        </form>
                    }
                </div>

                <div class="col-md-6">
                    <h6>Gérer les mails</h6>

                    <form asp-action="SendMail">
                        <input type="number" name="TicketId" hidden="hidden" value="@Model.Ticket.Id"/>
                        <button id="mailsendbtn" type="submit" class="btn btn-primary" onclick="return sendMail()">@(Model.MailSent ? "Renvoyer" : "Envoyer") le mail</button>
                    </form>

                </div>
            </div>
        </div>
    </div>
    <br/>

    <div class="row">

        <div class="col-md-6">

            <h6>Historique des emails envoyés</h6>

            <div class="tableFixHead">
                <table class="table table-bordered table-striped mb-0">
                    <thead>
                    <tr>
                        <th>
                            N°
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Utilisateur
                        </th>
                    </tr>
                    </thead>
                    <tbody>

                    @foreach (var item in Model.Mails)
                    {
                        <tr>
                            <td>
                                @(mailCount++)
                            </td>
                            <td>
                                @(item.Date.ToString("g"))
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.CreatorId)
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>


            <br/>

        </div>


        <div class="col-md-6">

            <h6>Historique des scans du billet</h6>

            <div class="tableFixHead">
                <table class="table table-bordered table-striped mb-0">
                    <thead>
                    <tr>
                        <th>
                            N°
                        </th>
                        <th>
                            Date
                        </th>
                        <th>
                            Utilisateur
                        </th>
                    </tr>
                    </thead>
                    <tbody>

                    @foreach (var item in Model.Scans)
                    {
                        <tr>
                            <td>
                                @(scanCount++)
                            </td>
                            <td>
                                @(item.Date.ToString("g"))
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.CreatorId)
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <br/>
    <div class="row">
        @Html.ActionLink("Retour à la liste", "List", new {id = Model.Ticket.Event.Id}, new {@class = "btn btn-info btn-lg", @style = "margin:5px;"})
        @Html.ActionLink("Editer", "Edit", new {id = Model.Ticket.Id}, new {@class = "btn btn-primary btn-lg", @style = "margin:5px;"})

        <form asp-action="Delete" asp-route-id="@Model.Ticket.Id">
            <button type="submit" class="btn btn-danger btn-lg" style="margin: 5px;" onclick="return confirm('Es-tu sûr de vouloir supprimer ce billet ?')">Supprimer</button>
        </form>

    </div>

</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    @if (Model.HasQrCode())
    {
        @Html.Raw("<script type=\"text/javascript\" src=\"/lib/qrcode/dist/qrcode.js\"></script>")
    }

    <script type="text/javascript">

        function sendMail() {
            if (confirm('Es-tu sûr de vouloir @(Model.MailSent ? "r" : "")envoyer ce mail ?')) {
                $("mailsendbtn").attr("disabled", true);
                return true;
            } else return false;
        }


        @if (Model.HasQrCode())
        {
            @:var qrCodeGenerated = false;

            @:function displayQrCode(text) {
            @:	if (qrCodeGenerated) return;
            @:  new QRCode(document.getElementById("qrcode"), { text: text, width: 192, height: 192 });
            @:	$("#qrcodebtn").remove();
            @:	qrCodeGenerated = true;
            @:}
        }
        else
        {
            @:function generateQrCode() { $("qrcodebtn").attr("disabled", true); }
        }
    </script>
}